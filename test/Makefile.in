VPATH = @srcdir@

INCLUDES = @APRUTIL_PRIV_INCLUDES@ @APR_INCLUDES@ @APRUTIL_INCLUDES@

PROGRAMS = testall dbd testssl echod sockperf
TARGETS = $(PROGRAMS)

APRUTIL_DOTTED_VERSION=@APRUTIL_DOTTED_VERSION@
APRUTIL_MAJOR_VERSION=@APRUTIL_MAJOR_VERSION@
TARGET_LIB_PATH = ../lib@APRUTIL_LIBNAME@.la

CLEAN_TARGETS = manyfile.bin testfile.txt data/sqlite*.db

# bring in rules.mk for standard functionality
@INCLUDE_RULES@
PROGRAM_DEPENDENCIES = @APRUTIL_LIBS@
APRUTIL_LDFLAGS = -no-install @APRUTIL_LDFLAGS@

# link programs using -no-install to get real executables not
# libtool wrapper scripts which link an executable when first run.
LINK_PROG = $(LIBTOOL) $(LTFLAGS) --mode=link $(LT_LDFLAGS) $(COMPILE) @LT_NO_INSTALL@ $(ALL_LDFLAGS) -o $@

check: $(PROGRAMS)
	teststatus=0; \
	progfailed=""; \
	for prog in $(PROGRAMS); do \
	        if test "$$prog" = 'dbd'; then \
			for driver in sqlite2 sqlite3; do \
				./$$prog $$driver; \
				status=$$?; \
				if test $$status != 0; then \
					teststatus=$$status; \
					progfailed="$$progfailed '$$prog $$driver'"; \
				fi; \
			done; \
	        else \
			./$$prog; \
			status=$$?; \
			if test $$status != 0; then \
				teststatus=$$status; \
				progfailed="$$progfailed $$prog"; \
			fi; \
		fi; \
	done; \
	if test $$teststatus != 0; then \
		echo "Programs failed:$$progfailed"; \
	fi; \
	exit $$teststatus

dbd_OBJECTS = dbd.lo
dbd_LDADD =  $(TARGET_LIB_PATH)
dbd: $(dbd_OBJECTS) $(dbd_LDADD)
	$(LINK_PROG) $(APRUTIL_LDFLAGS) $(dbd_OBJECTS) $(dbd_LDADD) $(PROGRAM_DEPENDENCIES)

testdbd_OBJECTS = testdbd.lo
testdbd_LDADD =  $(TARGET_LIB_PATH)
testdbd: $(testdbd_OBJECTS) $(testdbd_LDADD)
	$(LINK_PROG) $(APRUTIL_LDFLAGS) $(testdbd_OBJECTS) $(testdbd_LDADD) $(PROGRAM_DEPENDENCIES)

testssl_OBJECTS = testssl.lo
testssl_LDADD =  $(TARGET_LIB_PATH)
testssl: $(testssl_OBJECTS) $(testssl_LDADD)
	$(LINK_PROG) $(APRUTIL_LDFLAGS) $(testssl_OBJECTS) $(testssl_LDADD) $(PROGRAM_DEPENDENCIES)

echod_OBJECTS = echod.lo
echod_LDADD =  $(TARGET_LIB_PATH)
echod: $(echod_OBJECTS) $(echod_LDADD)
	$(LINK_PROG) $(APRUTIL_LDFLAGS) $(echod_OBJECTS) $(echod_LDADD) \
                $(PROGRAM_DEPENDENCIES)

sockperf_OBJECTS = sockperf.lo
sockperf_LDADD =  $(TARGET_LIB_PATH)
sockperf: $(sockperf_OBJECTS) $(sockperf_LDADD)
	$(LINK_PROG) $(APRUTIL_LDFLAGS) $(sockperf_OBJECTS) $(sockperf_LDADD) \
                $(PROGRAM_DEPENDENCIES)

testall_OBJECTS = teststrmatch.lo testuri.lo testuuid.lo abts.lo testutil.lo \
	testbuckets.lo testpass.lo testmd4.lo testmd5.lo testldap.lo \
	testdate.lo testdbd.lo testmemcache.lo testreslist.lo testqueue.lo \
	testxml.lo testxlate.lo testrmm.lo testdbm.lo
testall_LDADD =  $(TARGET_LIB_PATH)
testall: $(testall_OBJECTS) $(testall_LDADD)
	$(LINK_PROG) $(APRUTIL_LDFLAGS) $(testall_OBJECTS) $(testall_LDADD) $(PROGRAM_DEPENDENCIES)

